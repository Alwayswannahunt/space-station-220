using Content.Shared.SS220.Rituals.RitualFactory;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.SS220.Rituals.Ui;

[GenerateTypedNameReferences]
public sealed partial class RitualPhasePanel : Control
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
    [Dependency] private readonly ILocalizationManager _localizationManager = default!;

    private RitualStepPrototype? _shownRitualStepProto;
    public RitualPhasePanel(ProtoId<RitualStepPrototype> protoId, bool isNextStep)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
        _shownRitualStepProto = _prototypeManager.Index<RitualStepPrototype>(protoId);

        RitualStepName.Text = GetLocalizedString(_shownRitualStepProto.Name);
        PerformRitualStepDescription.SetMessage(GetLocalizedString(_shownRitualStepProto.Description));
        SetButtonState(isNextStep);
        // TODO RitualStepTexture = _shownRitualStepProto.UiIcon
    }
    private void SetButtonState(bool isNextStep)
    {
        PerformRitualStepName.Disabled = !isNextStep;
    }
    private string GetLocalizedString(string? localizationPath)
    {
        if (localizationPath == null)
            return "";
        if (_localizationManager.TryGetString(localizationPath, out var localizedString))
            return localizedString;
        return localizationPath;
    }
}
