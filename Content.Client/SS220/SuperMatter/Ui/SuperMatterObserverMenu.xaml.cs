// © SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using Content.Shared.SS220.SuperMatter.Functions;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;
using System.Numerics;

namespace Content.Client.SS220.SuperMatter.Ui;

// For optimization make cache value in ServerSystem and then subscribe from client if it needs it;
[GenerateTypedNameReferences]
public sealed partial class SuperMatterObserverMenu : FancyWindow
{
    private int counter = 0;
    private float conterAbobaX = 0f;
    private float conterAbobaY = 0f;
    public SuperMatterObserverMenu()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);
        PlotValueOverTime.SetXLabel("t, с");
        PlotValueOverTime.SetYLabel("u, эрг");
        ColorState.MakeMeshgrid((100, 100, 25), (1000, 100, 400));
        ColorState.EvalFunctionOnMeshgrid(GetIntegrityDamageMap);
    }
    public void UpdateState()
    {

    }
    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        PlotValueOverTime.AddPointToPlot(new Vector2(counter++, counter++));
        ColorState.LoadMovingPoint(new Vector2(conterAbobaX+=5, conterAbobaY+=80), new Vector2(5,80));
    }
    private float GetIntegrityDamageMap(float matter, float internalEnergy)
    {
        return SuperMatterFunctions.EnergyToMatterDamageFactorFunction(
                    internalEnergy - SuperMatterFunctions.SafeInternalEnergyToMatterFunction(matter));
    }
}
